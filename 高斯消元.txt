#include <cstdio>#include <string>#include <cstring>#include <cstdlib>#include <iostream>#include <cmath>#include <algorithm>using namespace std;#define INF 0x73737373#define ll __int64#define eps 1e-9const int MAXN=20; double a[MAXN][MAXN],x[MAXN];//方程的左边的矩阵和等式右边的值，求解之后x存的就是结果int n,equ,var;//方程数和未知数个数//返回0表示无解，1表示有解void init() {	var=equ=n;	double p[MAXN],q[MAXN];	for(int i=0; i<n; i++) {		scanf("%lf",&p[i]);	}	for(int i=0; i<n; i++) {		x[i]=0;		for(int j=0; j<n; j++) {			scanf("%lf",&q[j]);			a[i][j]=2*p[j]-2*q[j];			x[i]+=(p[j]*p[j]-q[j]*q[j]);		}	}}int Gauss() {	int i,j,k,col,max_r;	for(k=0,col=0; k<equ&&col<var; k++,col++) {		max_r=k;				for(i=k+1; i<equ; i++) 			if(fabs(a[i][col])>fabs(a[max_r][col])) 				max_r=i;			 		if(fabs(a[max_r][col])<eps) return 0;		if(k!=max_r) {			for(j=col; j<var; j++) swap(a[k][j],a[max_r][j]);			swap(x[k], x[max_r]);		}		x[k]/=a[k][col];		for(j=col+1; j<var; j++) a[k][j]/=a[k][col];		a[k][col]=1;		for(i=0; i<equ; i++) {			if(i!=k) {				x[i]-=x[k]*a[i][k];				for(j=col+1;j<var;j++) a[i][j]-=a[k][j]*a[i][col];				a[i][col]=0;			}		}	}	return 1;}int main() {	scanf("%d",&n);	init();	Gauss();	for(int i=0; i<var-1; i++) {		printf("%.3lf ",x[i]);	}	printf("%.3lf\n",x[var-1]);    return 0;}